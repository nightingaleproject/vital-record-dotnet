name: Versionize
on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: 'write'
  pull-requests: 'write'

jobs:
  scope:
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     proj: [VRDR,VRDR.CLI,BFDR]
    outputs:
      projs: ${{ steps.proj_filter.outputs.projs }}
    steps:
      - uses: actions/checkout@v3
        with:
            fetch-depth: 2
      # - run: echo ${{ matrix.proj }}
      # - name: Filter list of changed projects
      #   id: proj_filter
      #   run: echo "PROJ=$(git diff-tree HEAD | awk '$1$2~/04/' | cut -f2- | grep '^${{ matrix.proj }}$')" >> "$GITHUB_OUTPUT"
      - name: Filter list of changed projects
        id: proj_filter
        run: |
          echo "projs=$(git diff-tree HEAD | awk '$1$2~/04/' | cut -f2- | grep -e ^VRDR$ -e ^VRDR.Client$ -e ^VRDR.CLI$ | jq -cnR '[inputs | select(length>0)]')" >> "$GITHUB_OUTPUT"
      # - name: Advance project version
      #   if: steps.proj_filter.outputs.PROJ == matrix.proj
      #   run: echo "wee~"
  versionize:
    runs-on: ubuntu-latest
    needs: scope
    strategy:
      fail-fast: false
      matrix:
        proj: ${{ fromJson(needs.scope.outputs.projs) }}
    steps:
      - run: echo ${{ matrix.proj }}
      - uses: actions/checkout@v3
        with:
            fetch-depth: 0
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      - name: Setup Versionize
        run: |
          dotnet tool install --global Versionize
      - run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
      - name: Bump version and create changelog
        working-directory: ./${{ matrix.proj }}
        run: |
          versionize --proj-version-bump-logic --skip-tag --changelog-all
      - name: Get current version
        id: get-version
        working-directory: ./${{ matrix.proj }}
        run: |
          echo "version=$(versionize inspect)" >> $GITHUB_OUTPUT
      - name: Create release Pull Request
        uses: peter-evans/create-pull-request@v5
        id: cpr
        with:
          token: ${{ secrets.WHICHWIT_BOT_TOKEN }}
          commit-message: |
            chore: ${{ matrix.proj }} ${{ steps.get-version.outputs.version }}
          title: |
            chore: ${{ matrix.proj }} ${{ steps.get-version.outputs.version }}
          body: ""
          branch: versionize-${{ matrix.proj }}
          reviewers: ${{ github.actor }}
          delete-branch: true          
      

  # job2:
  #   runs-on: ubuntu-latest
  #   needs: versionize
  #   if: needs.versionize.outputs.proj != ''
  #   steps:
  #     - run: ls
